{"version":3,"file":"layout-toggle.class.js","sourceRoot":"","sources":["../../../../src/platform/core/layout/layout-toggle.class.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAyB,MAAM,eAAe,CAAC;AASxF;IAiBE,sBAAoB,OAAyB,EACzB,SAAoB,EACpB,WAAuB;QAFvB,YAAO,GAAP,OAAO,CAAkB;QACzB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAY;QAjB3C;;;;WAIG;QACsB,mBAAc,GAAY,IAAI,CAAC;QAatD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,uBAAuB,CAAC,CAAC;IACnF,CAAC;IARD,sBAAI,uCAAa;QAJjB;;WAEG;aAEH;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,MAAM,GAAG,SAAS,CAAC;QACzE,CAAC;;;OAAA;IAQD;;OAEG;IAEH,oCAAa,GAAb,UAAc,KAAY;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAEH,mBAAC;AAAD,CAAC,AAhCD,IAgCC;;AAzB0B;IAAxB,KAAK,CAAC,gBAAgB,CAAC;;oDAAgC;AAMxD;IADC,WAAW,CAAC,eAAe,CAAC;;;iDAG5B;AAYD;IADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACb,KAAK;;iDAGzB","sourcesContent":["import { Input, HostBinding, HostListener, Renderer2, ElementRef } from '@angular/core';\n\nimport { MdSidenavToggleResult } from '@angular/material';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  toggle(): Promise<MdSidenavToggleResult>;\n}\n\nexport abstract class LayoutToggle {\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to false, the host will not be hidden when\n   * the layout is set to [opened]=\"true\".\n   */\n  @Input('hideWhenOpened') hideWhenOpened: boolean = true;\n\n  /**\n   * Hides element if layout is opened and [hideWhenOpened] is set to true\n   */\n  @HostBinding('style.display')\n  get hiddenBinding(): string {\n    return this._layout.opened && this.hideWhenOpened ? 'none' : undefined;\n  }\n\n  constructor(private _layout: ILayoutTogglable,\n              private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    this._layout.toggle();\n  }\n\n}\n"]}