{"version":3,"file":"message.component.js","sourceRoot":"","sources":["../../../../src/platform/core/message/message.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, ChangeDetectorRef } from '@angular/core';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  @HostBinding('style.display')\n  get hidden(): string {\n    return !this._opened ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Initializes the component and attaches the content if [opened] was true.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._childElement.viewContainer.createEmbeddedView(this._template);\n        this._changeDetectorRef.markForCheck();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen.\n   */\n  open(): void {\n    if (!this._opened) {\n      this._opened = true;\n      this._childElement.viewContainer.createEmbeddedView(this._template);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   */\n  close(): void {\n    if (this._opened) {\n      this._opened = false;\n      this._childElement.viewContainer.clear();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n}\n"]}