{"version":3,"file":"file-upload.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/file/file-upload/file-upload.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,\n  forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled } from '../../common/common.module';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport class TdFileUploadBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinDisabled(TdFileUploadBase);\n\nexport const FILE_UPLOAD_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdFileUploadComponent),\n  multi: true,\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ FILE_UPLOAD_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-file-upload',\n  inputs: ['disabled'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements ControlValueAccessor, ICanDisable {\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  private _value: FileList | File = undefined;\n  \n  // get/set accessor (needed for ControlValueAccessor)\n  get value(): FileList | File { return this._value; }\n  set value(v: FileList | File) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  \n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  /**\n   * @deprecated use value property instead\n   */\n  get files(): FileList | File {\n    return this.value;\n  }\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onChange = (_: any) => noop;\n  onTouched = () => noop;\n}\n"]}